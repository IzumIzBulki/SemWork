# import random
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# # map
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# string = "1 2 3 4 14 141 12 12 41414 41 41 124 14 1"
# my_list = string.split()
# my_list = list(map(int, my_list)) # map - применение какой либо функции к какому либо списку, в данном случае преобразует в int каждый элемент в my_list
# my_list = set(map(int, my_list))
# my_list = [i+10 for i in my_list]
#
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# # list comprehension
# # запись в одну строку
# #-------------------------------------------------------------------------------------------------------------------------------------------------
#
# my_list = [i for i in range(10) if i != 5]
# my_list2 = [random.randint(0,100) for _ in range(10)]
# my_list3 = [str(i)+"1" for i in range(10)]
#
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# # filter применение какого то фильтра к каждому элементу
# #-------------------------------------------------------------------------------------------------------------------------------------------------
#
# def func(x: int):
#     if x%2 ==0:
#         return x
# string = "1 2 3 4 14 141 12 12 41414 41 41 124 14 1"
# my_list = string.split()
# my_list = list(map(int, my_list))
# my_list = list(filter(func, my_list))
#
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# # enumerate пронумеровывает список
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# string = "1 2 3 4 14 141 12 12 41414 41 41 124 14 1"
# my_list = string.split()
#
# for i, k in enumerate(my_list, 1):  # k - индекс который присваивает enumerate i значение под индексом, 1 в скобке, с какой цифры начать нумерацию
#     if int(k) > 50:
#         print(i)
# new_list = {}
# for i, k in enumerate(my_list, 1):
#     new_list[i*10] = k
# print(new_list.get(50)) # get - обращение к ключу в библиотеке
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# # zip объединяет элементы из 2ух списков в отдельные кортежи  1 с 1, 2 с 2, ....
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# string = "1 3 4 14"
# numbers = [23, 2323, 3214, 141]
# my_list = string.split()
# new_list2 = list(zip(my_list, numbers))   #[(1, 23)(3, 2323)(4, 3214)(14, 141)]
#
# my_dict = {}
# for i, key in enumerate(my_list): # значения my_list сделали ключами значения numbers присвоили как значения под ключем my_list
#     my_dict[key] = numbers[i]
#
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# # lambda
# #-------------------------------------------------------------------------------------------------------------------------------------------------
# string = "1 3 4 14"
# numbers = [23, 2323, 3214, 141]
# my_list = string.split()
# new_list5 = list(map(lambda x: int(x) + 40, my_list))
# print(new_list5)
#
# operation = {"+" : lambda x, y: x + y,
#              "-" : lambda x, y: x - y,
#              "*" : lambda x, y: x * y,
#              "/" : lambda x, y: x / y}
#
# example = "5 + 3 - 4"
# example = example.split()
# for i, item in enumerate(example):
#     if item in ["+", "-"]:
#         example[i-1] = operation.get(item)(example[i-1], example[i+1])
#
# print(operation.get("+")(3, 4))
# print(operation.get("*")(3, 4))
# print(operation.get("-")(3, 4))
# print(operation.get("/")(3, 4))


#-------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 1
#-------------------------------------------------------------------------------------------------------------------------------------------------
# Планеты вращаются вокруг звезд по эллиптическим орбитам.
# Назовем самой далекой планетой ту, орбита которой имеет самую большую площадь.
# Напишите функцию find_farthest_orbit(list_of_orbits),
# которая среди списка орбит планет найдет ту, по которой вращается самая далекая планета.
# Круговые орбиты не учитывайте: вы знаете, что у вашей звезды таких планет нет,
# зато искусственные спутники были запущены на круговые орбиты.
# Результатом функции должен быть кортеж, содержащий длины полуосей эллипса орбиты самой далекой планеты.
# Каждая орбита представляет из себя кортеж из пары чисел - полуосей ее эллипса.
# Площадь эллипса вычисляется по формуле S = pi*a*b, где a и b - длины полуосей эллипса.
# При решении задачи используйте списочные выражения.
# Подсказка: проще всего будет найти эллипс в два шага: сначала вычислить самую большую площадь эллипса,
# а затем найти и сам эллипс, имеющий такую площадь.
# Гарантируется, что самая далекая планета ровно одна

numbers = [(1, 23), (3, 2323), (4, 3214), (14, 141)]
for i in numbers:
    new_list5 = list(lambda y,x: y+x, i)

print(new_list5)